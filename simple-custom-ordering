/**
 *
 *  First up, add a new "Default Product Sorting" option which can be configured under,
 *  Appearance -> Customizer -> Product Catalogue -> Default Product Sorting
 *
 */

// Add 'in-stock-sale' => 'Sort by Stock + Sale' sorting option
add_filter( 'woocommerce_default_catalog_orderby_options', function ( $sortby ) {
    $sortby['in-stock-sale'] = 'Sort by Stock + Sale';
    return $sortby;
});


// Sort based on "Sort by Stock + Sale" default sorting option
add_filter( 'woocommerce_get_catalog_ordering_args', function ( $sort_args ) {
  $orderby_value = isset( $_GET['orderby'] ) ? woocommerce_clean( $_GET['orderby'] ) : apply_filters( 'woocommerce_default_catalog_orderby', get_option( 'woocommerce_default_catalog_orderby' ) );
 
    if ( 'in-stock-sale' == $orderby_value ) {
        $sort_args['meta_key'] = 'hbel_sort_point';
        $sort_args['orderby'] = 'meta_value_num';
        $sort_args['order'] = 'ASC';
		
    }
 
    return $sort_args;
} );


/**
 * 
 *  
 * This class is used to calcualte the Total Point accumulated by a product 
 * based on it's "Stock Status" and "On Sale"
 * 
 * Total points is returned by calling the "point" method
 * 
 */
 
class hbelPoint {
  
  // Status Property
  public $status;
	
  // On Sale Property
  public $sale;

  function __construct($status, $sale) {
    $this->status = $status;
    $this->sale = $sale;
  }
  function point() {
	  
	// Init Status point
	$status_point = 0;
	  
	// Init Sale point
	$sale_point = 0;
	 
	  
    // Variant Status Point
	if ( $this->status == 'instock' ) {
		$status_point = 1;
	} elseif ( $this->status == 'onbackorder' ) {
		$status_point = 3;
	} elseif ( $this->status == 'outofstock' ) {
		$status_point = 5;
	} else {
		$status_point = 0;
	}
	  
	// Variant Sale point
	if ( $this->sale == true ) {
		$sale_point = 0;
	} else {
		$sale_point = 1;
	}
	  
	return $status_point + $sale_point;
  }
}


/**
 * 
 * Loop through the products and save the point inside a custom field hbel_sort_point,
 * 
 * Which will also update based on Product's Stock and On sale ( true/ false )
 * 
 */

add_action('init', function() {
	
	    // Loop Args
		$args = array(
			'post_type' => 'product',
		);
	    
	    // Loop through all the Products
		$loop = new WP_Query( $args );
		if ( $loop->have_posts() ) {
			while ( $loop->have_posts() ) : $loop->the_post();
			    
			    // Current Product
			    global $product;
			
			    // Init onSale
			    $onSale = false;
			
			    // Get Current Product BY id
				// $product = wc_get_product( $current );
			    
			    
			    // Get Stock Status
			    $status = $product->stock_status;
			    
			    // Get Sale Price
			    $salePrice = $product->sale_price;
			
			    // Set onSale to true
			    if ( !empty($salePrice) && $salePrice !== "0") {
					$onSale = true;
				}
			    
			    // Get Point for this product
			    $getPoint = new hbelPoint( $status, $onSale );
			    $point = $getPoint->point();
			
			    // Update Point
			    update_post_meta( get_the_ID(), 'hbel_sort_point', $point );
			    
			endwhile;
		}
	
	   // Reset post data
		wp_reset_postdata();
		
});
